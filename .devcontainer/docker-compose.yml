# Docker Compose for GitHub Codespaces Development Environment
version: '3.8'

services:
  # Primary workspace container for development
  workspace:
    image: mcr.microsoft.com/devcontainers/universal:2-linux
    container_name: oatie-workspace
    volumes:
      - ../..:/workspaces:cached
      - oatie-venv:/workspace/.venv
      - oatie-node-modules:/workspace/node_modules
      - oatie-pip-cache:/root/.cache/pip
      - oatie-npm-cache:/root/.npm
    working_dir: /workspaces/oatie-ai-reporting
    command: sleep infinity
    environment:
      - PYTHONPATH=/workspaces/oatie-ai-reporting
      - NODE_ENV=development
      - ENVIRONMENT=development
      - DEBUG=true
      - DATABASE_URL=postgresql+asyncpg://postgres:password@postgres:5432/oatie_ai
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=development-secret-key-not-for-production
      - ENCRYPTION_KEY=development-encryption-key-32chars
      - CORS_ORIGINS=http://localhost:3000,https://*.githubpreview.dev,https://*.app.github.dev
      - ALLOWED_HOSTS=*
      - ORACLE_BI_URL=http://localhost:9502/xmlpserver
      - ORACLE_BI_USERNAME=weblogic
      - ORACLE_BI_PASSWORD=password
      - LOG_LEVEL=DEBUG
    networks:
      - oatie-dev-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  # PostgreSQL Database optimized for development
  postgres:
    image: postgres:15-alpine
    container_name: oatie-dev-postgres
    environment:
      POSTGRES_DB: oatie_ai
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ../infrastructure/docker/postgres-dev.conf:/etc/postgresql/postgresql.conf
      # Development-specific init scripts
      - ./init-db.sql:/docker-entrypoint-initdb.d/01-init.sql
    ports:
      - "5432:5432"
    command: postgres -c config_file=/etc/postgresql/postgresql.conf
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 10s
    networks:
      - oatie-dev-network
    restart: unless-stopped

  # Redis Cache for development
  redis:
    image: redis:7-alpine
    container_name: oatie-dev-redis
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru --bind 0.0.0.0
    volumes:
      - redis_dev_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - oatie-dev-network
    restart: unless-stopped

  # Prometheus for development monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: oatie-dev-prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
      - '--storage.tsdb.retention.time=7d'
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus-dev.yml:/etc/prometheus/prometheus.yml
      - prometheus_dev_data:/prometheus
    networks:
      - oatie-dev-network
    restart: unless-stopped

  # Grafana for development dashboards
  grafana:
    image: grafana/grafana:latest
    container_name: oatie-dev-grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_SECURITY_ADMIN_USER=admin
      - GF_INSTALL_PLUGINS=grafana-piechart-panel,grafana-clock-panel,grafana-simple-json-datasource
      - GF_SECURITY_ALLOW_EMBEDDING=true
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Viewer
    ports:
      - "3001:3000"
    volumes:
      - grafana_dev_data:/var/lib/grafana
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/datasources:/etc/grafana/provisioning/datasources
    networks:
      - oatie-dev-network
    restart: unless-stopped
    depends_on:
      - prometheus

  # Mock Oracle BI Publisher for development (optional)
  oracle-mock:
    image: nginx:alpine
    container_name: oatie-oracle-mock
    ports:
      - "9502:80"
    volumes:
      - ./oracle-mock:/usr/share/nginx/html
      - ./oracle-mock/nginx.conf:/etc/nginx/nginx.conf
    networks:
      - oatie-dev-network
    restart: unless-stopped
    profiles:
      - mock-oracle

volumes:
  postgres_dev_data:
    driver: local
  redis_dev_data:
    driver: local
  prometheus_dev_data:
    driver: local
  grafana_dev_data:
    driver: local
  oatie-venv:
    driver: local
  oatie-node-modules:
    driver: local
  oatie-pip-cache:
    driver: local
  oatie-npm-cache:
    driver: local

networks:
  oatie-dev-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.21.0.0/16