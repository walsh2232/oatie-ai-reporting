name: Deploy Documentation to GitHub Pages

on:
  push:
    branches: [ main ]
    paths: [ 'docs/**', 'README.md', '.github/workflows/docs.yml' ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm install -g @11ty/eleventy
          npm install markdown-it-anchor markdown-it-table-of-contents

      - name: Create Eleventy config
        run: |
          cat > .eleventy.js << 'EOF'
          const markdownIt = require("markdown-it");
          const markdownItAnchor = require("markdown-it-anchor");
          const markdownItToc = require("markdown-it-table-of-contents");

          module.exports = function(eleventyConfig) {
            // Copy static assets
            eleventyConfig.addPassthroughCopy("docs/assets");
            eleventyConfig.addPassthroughCopy("docs/**/*.png");
            eleventyConfig.addPassthroughCopy("docs/**/*.jpg");
            eleventyConfig.addPassthroughCopy("docs/**/*.gif");
            
            // Set custom markdown processor
            let markdownLibrary = markdownIt({
              html: true,
              breaks: true,
              linkify: true
            }).use(markdownItAnchor, {
              permalink: markdownItAnchor.permalink.ariaHidden({
                placement: "after",
                class: "direct-link",
                symbol: "#",
              }),
              level: [1,2,3,4],
              slugify: eleventyConfig.getFilter("slug")
            }).use(markdownItToc, {
              includeLevel: [1,2,3,4],
              containerClass: "table-of-contents"
            });
            
            eleventyConfig.setLibrary("md", markdownLibrary);
            
            return {
              dir: {
                input: "docs",
                output: "_site",
                includes: "_includes",
                layouts: "_layouts"
              },
              templateFormats: ["md", "njk", "html"],
              markdownTemplateEngine: "njk",
              htmlTemplateEngine: "njk"
            };
          };
          EOF

      - name: Create base layout
        run: |
          mkdir -p docs/_layouts
          cat > docs/_layouts/base.njk << 'EOF'
          <!DOCTYPE html>
          <html lang="en">
          <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>{% if title %}{{ title }} - {% endif %}Oatie Documentation</title>
            <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/themes/prism.min.css">
            <style>
              body {
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', system-ui, sans-serif;
                line-height: 1.6;
                color: #333;
                max-width: 1200px;
                margin: 0 auto;
                padding: 20px;
              }
              .header {
                background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                color: white;
                padding: 2rem;
                border-radius: 10px;
                margin-bottom: 2rem;
                text-align: center;
              }
              .header h1 { margin: 0; font-size: 2.5rem; }
              .header p { margin: 0.5rem 0 0 0; opacity: 0.9; }
              .nav {
                background: #f8f9fa;
                padding: 1rem;
                border-radius: 8px;
                margin-bottom: 2rem;
              }
              .nav ul { list-style: none; padding: 0; margin: 0; }
              .nav li { display: inline-block; margin-right: 2rem; }
              .nav a {
                color: #495057;
                text-decoration: none;
                font-weight: 500;
                padding: 0.5rem 1rem;
                border-radius: 4px;
                transition: background-color 0.2s;
              }
              .nav a:hover { background-color: #e9ecef; }
              .content {
                background: white;
                padding: 2rem;
                border-radius: 8px;
                box-shadow: 0 2px 10px rgba(0,0,0,0.1);
              }
              .table-of-contents {
                background: #f8f9fa;
                padding: 1rem;
                border-radius: 8px;
                margin: 1rem 0;
              }
              code {
                background: #f1f3f4;
                padding: 2px 6px;
                border-radius: 4px;
                font-size: 0.9em;
              }
              pre code {
                background: none;
                padding: 0;
              }
              pre {
                background: #f8f9fa;
                padding: 1rem;
                border-radius: 8px;
                overflow-x: auto;
              }
              .footer {
                text-align: center;
                padding: 2rem;
                margin-top: 2rem;
                border-top: 1px solid #e9ecef;
                color: #6c757d;
              }
              .badges img { margin: 2px; }
            </style>
          </head>
          <body>
            <div class="header">
              <h1>ü§ñ Oatie Documentation</h1>
              <p>AI-Powered Oracle BI Publisher Assistant</p>
              <div class="badges">
                <img src="https://img.shields.io/badge/GitHub-Pro-purple" alt="GitHub Pro">
                <img src="https://img.shields.io/badge/FastAPI-Latest-green" alt="FastAPI">
                <img src="https://img.shields.io/badge/React-18+-blue" alt="React">
                <img src="https://img.shields.io/badge/TypeScript-5+-blue" alt="TypeScript">
                <img src="https://img.shields.io/badge/OpenAI-GPT--3.5-orange" alt="OpenAI">
              </div>
            </div>
            
            <nav class="nav">
              <ul>
                <li><a href="/">Home</a></li>
                <li><a href="/getting-started/">Getting Started</a></li>
                <li><a href="/api/">API Reference</a></li>
                <li><a href="/developer/">Developer Docs</a></li>
                <li><a href="https://github.com/username/oatie">GitHub</a></li>
              </ul>
            </nav>
            
            <main class="content">
              {{ content | safe }}
            </main>
            
            <footer class="footer">
              <p>
                Built with ‚ù§Ô∏è using GitHub Pro features<br>
                <a href="https://github.com/username/oatie">View on GitHub</a> |
                <a href="https://github.com/username/oatie/issues">Report Issues</a> |
                <a href="mailto:team@oatie.ai">Contact</a>
              </p>
            </footer>
            
            <script src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/prism-core.min.js"></script>
            <script src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/plugins/autoloader/prism-autoloader.min.js"></script>
          </body>
          </html>
          EOF

      - name: Process documentation
        run: |
          # Add layout front matter to all markdown files
          find docs -name "*.md" -type f | while read file; do
            if ! grep -q "^---" "$file"; then
              title=$(basename "$file" .md | sed 's/-/ /g' | awk '{for(i=1;i<=NF;i++) $i=toupper(substr($i,1,1)) tolower(substr($i,2));}1')
              echo -e "---\nlayout: base.njk\ntitle: $title\n---\n$(cat "$file")" > "$file.tmp"
              mv "$file.tmp" "$file"
            fi
          done

      - name: Build with Eleventy
        run: |
          npx @11ty/eleventy

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: '_site'

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
