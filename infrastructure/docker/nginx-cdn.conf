# CDN and Browser Caching Configuration for Enterprise Performance
# nginx.conf with advanced caching and CDN optimization

user nginx;
worker_processes auto;
worker_rlimit_nofile 65535;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 4096;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging Configuration
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';

    access_log /var/log/nginx/access.log main;

    # Performance Optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    keepalive_requests 1000;
    types_hash_max_size 2048;
    server_tokens off;

    # Gzip Compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        application/atom+xml
        application/geo+json
        application/javascript
        application/x-javascript
        application/json
        application/ld+json
        application/manifest+json
        application/rdf+xml
        application/rss+xml
        application/xhtml+xml
        application/xml
        font/eot
        font/otf
        font/ttf
        image/svg+xml
        text/css
        text/javascript
        text/plain
        text/xml;

    # Brotli Compression (if available)
    # brotli on;
    # brotli_comp_level 6;
    # brotli_types text/xml image/svg+xml application/x-font-ttf image/vnd.microsoft.icon application/x-font-opentype application/json font/eot application/vnd.ms-fontobject application/javascript font/otf application/xml application/xhtml+xml text/javascript  application/x-javascript text/plain application/xml+rss text/css;

    # Rate Limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=static:10m rate=100r/s;

    # Upstream Backend Servers
    upstream oatie_backend {
        least_conn;
        server oatie-backend-1:8000 max_fails=3 fail_timeout=30s;
        server oatie-backend-2:8000 max_fails=3 fail_timeout=30s;
        server oatie-backend-3:8000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    # Cache Zones
    proxy_cache_path /var/cache/nginx/api levels=1:2 keys_zone=api_cache:100m max_size=1g inactive=1d use_temp_path=off;
    proxy_cache_path /var/cache/nginx/static levels=1:2 keys_zone=static_cache:100m max_size=10g inactive=30d use_temp_path=off;

    # Main Server Configuration
    server {
        listen 80;
        listen [::]:80;
        server_name _;
        
        # Redirect HTTP to HTTPS
        return 301 https://$server_name$request_uri;
    }

    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name oatie-ai.company.com;

        # SSL Configuration
        ssl_certificate /etc/ssl/certs/oatie-ai.crt;
        ssl_certificate_key /etc/ssl/private/oatie-ai.key;
        ssl_session_timeout 1d;
        ssl_session_cache shared:SSL:50m;
        ssl_session_tickets off;

        # Modern SSL Configuration
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;

        # HSTS Header
        add_header Strict-Transport-Security "max-age=63072000" always;

        # Security Headers
        add_header X-Frame-Options DENY always;
        add_header X-Content-Type-Options nosniff always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' https://cdn.jsdelivr.net; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data: https:; connect-src 'self' https://api.oatie-ai.company.com" always;

        # Frontend Static Files with CDN-style caching
        location / {
            root /usr/share/nginx/html;
            index index.html;
            try_files $uri $uri/ /index.html;

            # Browser Caching for Static Assets
            location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
                expires 1y;
                add_header Cache-Control "public, immutable";
                add_header X-Cache-Status "STATIC";
                
                # Enable compression
                gzip_static on;
                
                # Rate limiting for static files
                limit_req zone=static burst=20 nodelay;
                
                # CORS headers for CDN compatibility
                add_header Access-Control-Allow-Origin "*";
                add_header Access-Control-Allow-Methods "GET, OPTIONS";
                add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept";
            }

            # HTML files - shorter cache for updates
            location ~* \.html$ {
                expires 1h;
                add_header Cache-Control "public, must-revalidate";
                add_header X-Cache-Status "HTML";
            }

            # Service Worker - no cache
            location /sw.js {
                expires -1;
                add_header Cache-Control "no-cache, no-store, must-revalidate";
                add_header Pragma "no-cache";
            }
        }

        # API Endpoints with Intelligent Caching
        location /api/ {
            # Rate limiting for API endpoints
            limit_req zone=api burst=20 nodelay;

            # Proxy to backend
            proxy_pass http://oatie_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;

            # Connection pooling
            proxy_set_header Connection "";

            # Timeouts
            proxy_connect_timeout 30s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;

            # Cache Configuration for Different API Types
            location /api/v1/reports {
                proxy_pass http://oatie_backend;
                
                # Cache reports for 5 minutes
                proxy_cache api_cache;
                proxy_cache_valid 200 5m;
                proxy_cache_valid 404 1m;
                proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
                proxy_cache_background_update on;
                proxy_cache_lock on;
                
                add_header X-Cache-Status $upstream_cache_status;
            }

            location /api/v1/analytics {
                proxy_pass http://oatie_backend;
                
                # Cache analytics for 2 minutes
                proxy_cache api_cache;
                proxy_cache_valid 200 2m;
                proxy_cache_use_stale error timeout updating;
                
                add_header X-Cache-Status $upstream_cache_status;
            }

            location /api/v1/sql/generate {
                proxy_pass http://oatie_backend;
                
                # No caching for dynamic SQL generation
                proxy_cache off;
                add_header Cache-Control "no-cache, no-store, must-revalidate";
                add_header X-Cache-Status "BYPASS";
            }

            location /api/v1/auth {
                proxy_pass http://oatie_backend;
                
                # No caching for authentication
                proxy_cache off;
                add_header Cache-Control "no-cache, no-store, must-revalidate";
                add_header X-Cache-Status "BYPASS";
            }
        }

        # GraphQL Endpoint
        location /graphql {
            proxy_pass http://oatie_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # No caching for GraphQL (too dynamic)
            proxy_cache off;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
        }

        # Health Check Endpoints
        location /health {
            proxy_pass http://oatie_backend;
            proxy_cache off;
            access_log off;
        }

        # Metrics Endpoint (Prometheus)
        location /metrics {
            proxy_pass http://oatie_backend;
            proxy_cache off;
            
            # Restrict access to monitoring systems
            allow 10.0.0.0/8;
            allow 172.16.0.0/12;
            allow 192.168.0.0/16;
            deny all;
        }

        # Webhook Endpoints
        location /webhooks/ {
            proxy_pass http://oatie_backend;
            proxy_cache off;
            
            # Higher timeout for webhook processing
            proxy_read_timeout 300s;
            proxy_send_timeout 300s;
        }

        # WebSocket Support (for real-time features)
        location /ws {
            proxy_pass http://oatie_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket specific timeouts
            proxy_read_timeout 86400s;
            proxy_send_timeout 86400s;
            proxy_cache off;
        }

        # Error Pages
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;

        location = /50x.html {
            root /usr/share/nginx/html;
        }

        # Deny access to hidden files
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }

        # Deny access to backup files
        location ~ ~$ {
            deny all;
            access_log off;
            log_not_found off;
        }
    }

    # Cache Purge API (for CDN invalidation)
    server {
        listen 8080;
        server_name localhost;
        
        location /purge {
            allow 127.0.0.1;
            allow 10.0.0.0/8;
            deny all;
            
            proxy_cache_purge api_cache $scheme$proxy_host$request_uri;
        }
        
        location /purge-static {
            allow 127.0.0.1;
            allow 10.0.0.0/8;
            deny all;
            
            proxy_cache_purge static_cache $scheme$proxy_host$request_uri;
        }
    }
}

# Stream block for load balancing other TCP services
stream {
    # Database connection load balancing (if needed)
    upstream database_pool {
        server db-primary:5432 weight=3;
        server db-replica-1:5432 weight=1;
        server db-replica-2:5432 weight=1;
    }
    
    server {
        listen 5432;
        proxy_pass database_pool;
        proxy_timeout 1s;
        proxy_responses 1;
    }
}