# Active Services for Blue-Green Deployment
# These services route traffic to the currently active environment

apiVersion: v1
kind: Service
metadata:
  name: oatie-frontend-active
  namespace: oatie-ai-production
  labels:
    app: oatie-frontend
    role: active
spec:
  type: LoadBalancer
  ports:
  - port: 80
    targetPort: http
    protocol: TCP
    name: http
  - port: 443
    targetPort: https
    protocol: TCP
    name: https
  selector:
    app: oatie-frontend
    environment: blue  # Initially pointing to blue environment

---
apiVersion: v1
kind: Service
metadata:
  name: oatie-backend-active
  namespace: oatie-ai-production
  labels:
    app: oatie-backend
    role: active
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: http
    protocol: TCP
    name: http
  selector:
    app: oatie-backend
    environment: blue  # Initially pointing to blue environment

---
# Ingress for Blue-Green Deployment
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: oatie-ingress
  namespace: oatie-ai-production
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    # Blue-Green specific annotations
    nginx.ingress.kubernetes.io/canary: "false"
    nginx.ingress.kubernetes.io/load-balance: "ewma"
spec:
  tls:
  - hosts:
    - oatie.company.com
    - api.oatie.company.com
    secretName: oatie-tls-cert
  rules:
  - host: oatie.company.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: oatie-frontend-active
            port:
              number: 80
  - host: api.oatie.company.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: oatie-backend-active
            port:
              number: 80

---
# Canary Ingress for gradual rollouts
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: oatie-ingress-canary
  namespace: oatie-ai-production
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/canary: "true"
    nginx.ingress.kubernetes.io/canary-weight: "0"  # Start with 0% traffic
    nginx.ingress.kubernetes.io/canary-by-header: "x-canary"
    nginx.ingress.kubernetes.io/canary-by-header-value: "always"
spec:
  tls:
  - hosts:
    - oatie.company.com
    - api.oatie.company.com
    secretName: oatie-tls-cert
  rules:
  - host: oatie.company.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: oatie-frontend-green  # Canary points to green initially
            port:
              number: 80
  - host: api.oatie.company.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: oatie-backend-green  # Canary points to green initially
            port:
              number: 80

---
# HorizontalPodAutoscaler for Blue Environment
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: oatie-backend-blue-hpa
  namespace: oatie-ai-production
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: oatie-backend-blue
  minReplicas: 3
  maxReplicas: 20
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 15

---
# HorizontalPodAutoscaler for Green Environment
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: oatie-backend-green-hpa
  namespace: oatie-ai-production
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: oatie-backend-green
  minReplicas: 3
  maxReplicas: 20
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 15

---
# Frontend HPA for Blue
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: oatie-frontend-blue-hpa
  namespace: oatie-ai-production
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: oatie-frontend-blue
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70

---
# Frontend HPA for Green
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: oatie-frontend-green-hpa
  namespace: oatie-ai-production
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: oatie-frontend-green
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70