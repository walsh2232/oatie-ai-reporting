{
  "info": {
    "name": "Oatie AI API Performance Tests",
    "description": "Comprehensive API testing for Oracle BI Publisher AI Assistant",
    "version": "1.0.0",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{auth_token}}",
        "type": "string"
      }
    ]
  },
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Set base URL and timestamp",
          "pm.globals.set('baseUrl', pm.environment.get('baseUrl') || 'http://localhost:8000');",
          "pm.globals.set('timestamp', new Date().toISOString());"
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Performance testing utilities",
          "const responseTime = pm.response.responseTime;",
          "const statusCode = pm.response.code;",
          "",
          "// Log performance metrics",
          "console.log(`${pm.info.requestName}: ${responseTime}ms - ${statusCode}`);",
          "",
          "// Performance assertions",
          "pm.test('Response time is acceptable', function () {",
          "    pm.expect(responseTime).to.be.below(2000); // 2 second threshold",
          "});",
          "",
          "pm.test('Status code is successful', function () {",
          "    pm.expect(statusCode).to.be.oneOf([200, 201, 202, 204]);",
          "});"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:8000",
      "type": "string"
    },
    {
      "key": "auth_token",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Login",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"{{username}}\",\n  \"password\": \"{{password}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "auth", "login"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Login successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Access token received', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('access_token');",
                  "    pm.globals.set('auth_token', jsonData.access_token);",
                  "});",
                  "",
                  "pm.test('Login response time acceptable', function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(1000);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "User Profile",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/v1/users/profile",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "users", "profile"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Profile data received', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('username');",
                  "    pm.expect(jsonData).to.have.property('email');",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Reports",
      "item": [
        {
          "name": "List Reports",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/v1/reports?page=1&limit=20",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "reports"],
              "query": [
                {"key": "page", "value": "1"},
                {"key": "limit", "value": "20"}
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Reports list received', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('reports');",
                  "    pm.expect(jsonData.reports).to.be.an('array');",
                  "});",
                  "",
                  "pm.test('Pagination information present', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('total');",
                  "    pm.expect(jsonData).to.have.property('page');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Execute Report",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"report_id\": \"sales_summary\",\n  \"parameters\": {\n    \"start_date\": \"2024-01-01\",\n    \"end_date\": \"2024-12-31\",\n    \"region\": \"North\"\n  },\n  \"format\": \"json\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/reports/execute",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "reports", "execute"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Report execution successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('data');",
                  "    pm.expect(jsonData).to.have.property('metadata');",
                  "});",
                  "",
                  "pm.test('Report execution time reasonable', function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(10000); // 10 second threshold for reports",
                  "});",
                  "",
                  "pm.test('Report data structure valid', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.metadata).to.have.property('row_count');",
                  "    pm.expect(jsonData.metadata).to.have.property('execution_time');",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Query Execution",
      "item": [
        {
          "name": "Execute SQL Query",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"sql\": \"SELECT region, SUM(sales_amount) as total_sales FROM sales_data WHERE sale_date >= :start_date GROUP BY region ORDER BY total_sales DESC\",\n  \"parameters\": {\n    \"start_date\": \"2024-01-01\"\n  },\n  \"use_cache\": true,\n  \"timeout\": 30\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/queries/execute",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "queries", "execute"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Query execution successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('data');",
                  "    pm.expect(jsonData).to.have.property('execution_time');",
                  "});",
                  "",
                  "pm.test('Query performance acceptable', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.execution_time).to.be.below(5000); // 5 second query threshold",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Query History",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/v1/queries/history?limit=10",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "queries", "history"],
              "query": [
                {"key": "limit", "value": "10"}
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Query history retrieved', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('queries');",
                  "    pm.expect(jsonData.queries).to.be.an('array');",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Performance Monitoring",
      "item": [
        {
          "name": "Performance Metrics",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/v1/performance/metrics",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "performance", "metrics"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Performance metrics available', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('request_count');",
                  "    pm.expect(jsonData).to.have.property('average_duration');",
                  "    pm.expect(jsonData).to.have.property('cache_hit_rate');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Health Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/health",
              "host": ["{{baseUrl}}"],
              "path": ["health"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Health check passes', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.status).to.eql('healthy');",
                  "});",
                  "",
                  "pm.test('Health check is fast', function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(500);",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Load Testing Scenarios",
      "item": [
        {
          "name": "Concurrent Report Executions",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"report_id\": \"{{$randomElement(['sales_summary', 'financial_dashboard', 'customer_analysis'])}}\",\n  \"parameters\": {\n    \"start_date\": \"{{$randomDateRecent}}\",\n    \"end_date\": \"{{$isoTimestamp}}\",\n    \"region\": \"{{$randomElement(['North', 'South', 'East', 'West'])}}\" \n  },\n  \"format\": \"json\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/reports/execute",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "reports", "execute"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Concurrent execution handles load', function () {",
                  "    pm.response.to.have.status(200);",
                  "    pm.expect(pm.response.responseTime).to.be.below(15000); // Extended threshold for load",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    }
  ]
}